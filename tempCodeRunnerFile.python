import numpy as np

def partial_pivoting(matrix):
    n = len(matrix)

    for i in range(n):
        # Find the pivot element (maximum absolute value) in the current column
        pivot_row = np.argmax(np.abs(matrix[i:, i])) + i

        # Swap the current row with the row containing the pivot element
        matrix[[i, pivot_row]] = matrix[[pivot_row, i]]

        # Eliminate entries below the pivot by performing row operations
        for j in range(i + 1, n):
            ratio = matrix[j, i] / matrix[i, i]
            matrix[j, i:] -= ratio * matrix[i, i:]

    return matrix

# Example usage:
A = np.array([[-2, -3, 0],
              [-3, -1, -1],
              [0, -1, -2]])

result = partial_pivoting(A.copy())
print("Partial Pivoting Result:")
print(result)
